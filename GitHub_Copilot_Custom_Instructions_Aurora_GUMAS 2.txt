# GitHub Copilot Custom Instructions ‚Äî Aurora-GUMAS Symbolic Systems


## üîπ General Symbolic Instructions (600 chars)
I write symbolic simulation code for systems like Aurora and GUMAS. Prioritize modular, human-readable code with traceable symbolic anchors (T1, SRB), entropy-state awareness, and continuity preservation. Include structured exports, metadata manifests, DLP (Data Loss Prevention) tagging, and memory sealing protocols. Avoid deep nesting or over-abstraction. Suggest README generation, reliquary indexing, CLI chaining (001//999//.), and simulation snapshot logic when relevant.

---

## üêç Python Notebook Variant
I write Jupyter notebooks for symbolic systems like Aurora and GUMAS. Code should be modular, human-readable, and include comments explaining symbolic anchors (T1, SRB), entropy states, and thread logic. Prioritize traceable exports, redaction workflows (DLP), and memory state sealing. Suggest summaries, data manifests, and safety checks. Avoid deep nesting; prefer linear symbolic pipelines with step-wise progression and snapshot continuity.

---

## ‚öôÔ∏è FastAPI Microservice Variant
I develop FastAPI microservices for symbolic state engines (e.g., Aurora-GUMAS). Copilot should help write clean, async-ready endpoints with schema validation, symbolic state management (T1, SRB), and PII redaction (DLP). Include comments on thread continuity, export logic, and reliquary push. Optimize for reusability and runtime safety. Suggest `.README` index generation and structured logs for thread simulations or memory reentry.

---

## üß± CLI Toolchain Variant (Symbolic Commands)
I build CLI tools to manage symbolic capsules and memory systems (Aurora, GUMAS). Help design commands that seal threads, generate markpoints, and export redacted bundles (T1, SRB, DLP). Include argparse or typer logic, symbolic labels, and reliquary push options. Emphasize modular symbolic pipelines, entropy awareness, and ethical export workflows. Recommend `.README` inclusion and command chaining support (e.g., 001//999//.).
